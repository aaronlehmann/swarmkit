// Code generated by protoc-gen-gogo.
// source: plugin.proto
// DO NOT EDIT!

/*
	Package plugin is a generated protocol buffer package.

	It is generated from these files:
		plugin.proto

	It has these top-level messages:
		WatchSelectors
		StoreObject
		TLSAuthorization
*/
package plugin

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type WatchSelectors struct {
	// supported by all object types
	ID           *bool `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	IDPrefix     *bool `protobuf:"varint,2,opt,name=id_prefix,json=idPrefix" json:"id_prefix,omitempty"`
	Name         *bool `protobuf:"varint,3,opt,name=name" json:"name,omitempty"`
	NamePrefix   *bool `protobuf:"varint,4,opt,name=name_prefix,json=namePrefix" json:"name_prefix,omitempty"`
	Custom       *bool `protobuf:"varint,5,opt,name=custom" json:"custom,omitempty"`
	CustomPrefix *bool `protobuf:"varint,6,opt,name=custom_prefix,json=customPrefix" json:"custom_prefix,omitempty"`
	// supported by tasks only
	ServiceID    *bool `protobuf:"varint,7,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	NodeID       *bool `protobuf:"varint,8,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Slot         *bool `protobuf:"varint,9,opt,name=slot" json:"slot,omitempty"`
	DesiredState *bool `protobuf:"varint,10,opt,name=desired_state,json=desiredState" json:"desired_state,omitempty"`
	// supported by nodes only
	Role       *bool `protobuf:"varint,11,opt,name=role" json:"role,omitempty"`
	Membership *bool `protobuf:"varint,12,opt,name=membership" json:"membership,omitempty"`
	// supported by: resource
	Kind             *bool  `protobuf:"varint,13,opt,name=kind" json:"kind,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WatchSelectors) Reset()                    { *m = WatchSelectors{} }
func (*WatchSelectors) ProtoMessage()               {}
func (*WatchSelectors) Descriptor() ([]byte, []int) { return fileDescriptorPlugin, []int{0} }

type StoreObject struct {
	WatchSelectors   *WatchSelectors `protobuf:"bytes,1,req,name=watch_selectors,json=watchSelectors" json:"watch_selectors,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *StoreObject) Reset()                    { *m = StoreObject{} }
func (*StoreObject) ProtoMessage()               {}
func (*StoreObject) Descriptor() ([]byte, []int) { return fileDescriptorPlugin, []int{1} }

type TLSAuthorization struct {
	// Roles contains the acceptable TLS OU roles for the handler.
	Roles []string `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	// Insecure is set to true if this method does not require
	// authorization. NOTE: Specifying both "insecure" and a nonempty
	// list of roles is invalid. This would fail at codegen time.
	Insecure         *bool  `protobuf:"varint,2,opt,name=insecure" json:"insecure,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TLSAuthorization) Reset()                    { *m = TLSAuthorization{} }
func (*TLSAuthorization) ProtoMessage()               {}
func (*TLSAuthorization) Descriptor() ([]byte, []int) { return fileDescriptorPlugin, []int{2} }

var E_Deepcopy = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70000,
	Name:          "docker.protobuf.plugin.deepcopy",
	Tag:           "varint,70000,opt,name=deepcopy,def=1",
}

var E_Deepcompare = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70002,
	Name:          "docker.protobuf.plugin.deepcompare",
	Tag:           "varint,70002,opt,name=deepcompare,def=1",
}

var E_StoreObject = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*StoreObject)(nil),
	Field:         70001,
	Name:          "docker.protobuf.plugin.store_object",
	Tag:           "bytes,70001,opt,name=store_object,json=storeObject",
}

var E_TlsAuthorization = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*TLSAuthorization)(nil),
	Field:         73626345,
	Name:          "docker.protobuf.plugin.tls_authorization",
	Tag:           "bytes,73626345,opt,name=tls_authorization,json=tlsAuthorization",
}

func init() {
	proto.RegisterType((*WatchSelectors)(nil), "docker.protobuf.plugin.WatchSelectors")
	proto.RegisterType((*StoreObject)(nil), "docker.protobuf.plugin.StoreObject")
	proto.RegisterType((*TLSAuthorization)(nil), "docker.protobuf.plugin.TLSAuthorization")
	proto.RegisterExtension(E_Deepcopy)
	proto.RegisterExtension(E_Deepcompare)
	proto.RegisterExtension(E_StoreObject)
	proto.RegisterExtension(E_TlsAuthorization)
}
func (m *WatchSelectors) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchSelectors) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ID != nil {
		dAtA[i] = 0x8
		i++
		if *m.ID {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IDPrefix != nil {
		dAtA[i] = 0x10
		i++
		if *m.IDPrefix {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Name != nil {
		dAtA[i] = 0x18
		i++
		if *m.Name {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.NamePrefix != nil {
		dAtA[i] = 0x20
		i++
		if *m.NamePrefix {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Custom != nil {
		dAtA[i] = 0x28
		i++
		if *m.Custom {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CustomPrefix != nil {
		dAtA[i] = 0x30
		i++
		if *m.CustomPrefix {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ServiceID != nil {
		dAtA[i] = 0x38
		i++
		if *m.ServiceID {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.NodeID != nil {
		dAtA[i] = 0x40
		i++
		if *m.NodeID {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Slot != nil {
		dAtA[i] = 0x48
		i++
		if *m.Slot {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DesiredState != nil {
		dAtA[i] = 0x50
		i++
		if *m.DesiredState {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Role != nil {
		dAtA[i] = 0x58
		i++
		if *m.Role {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Membership != nil {
		dAtA[i] = 0x60
		i++
		if *m.Membership {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Kind != nil {
		dAtA[i] = 0x68
		i++
		if *m.Kind {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *StoreObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreObject) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.WatchSelectors == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("watch_selectors")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintPlugin(dAtA, i, uint64(m.WatchSelectors.Size()))
		n1, err := m.WatchSelectors.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TLSAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLSAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for _, s := range m.Roles {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.Insecure != nil {
		dAtA[i] = 0x10
		i++
		if *m.Insecure {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeFixed64Plugin(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Plugin(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintPlugin(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *WatchSelectors) Size() (n int) {
	var l int
	_ = l
	if m.ID != nil {
		n += 2
	}
	if m.IDPrefix != nil {
		n += 2
	}
	if m.Name != nil {
		n += 2
	}
	if m.NamePrefix != nil {
		n += 2
	}
	if m.Custom != nil {
		n += 2
	}
	if m.CustomPrefix != nil {
		n += 2
	}
	if m.ServiceID != nil {
		n += 2
	}
	if m.NodeID != nil {
		n += 2
	}
	if m.Slot != nil {
		n += 2
	}
	if m.DesiredState != nil {
		n += 2
	}
	if m.Role != nil {
		n += 2
	}
	if m.Membership != nil {
		n += 2
	}
	if m.Kind != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoreObject) Size() (n int) {
	var l int
	_ = l
	if m.WatchSelectors != nil {
		l = m.WatchSelectors.Size()
		n += 1 + l + sovPlugin(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLSAuthorization) Size() (n int) {
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for _, s := range m.Roles {
			l = len(s)
			n += 1 + l + sovPlugin(uint64(l))
		}
	}
	if m.Insecure != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPlugin(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozPlugin(x uint64) (n int) {
	return sovPlugin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *WatchSelectors) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&WatchSelectors{`,
		`ID:` + valueToStringPlugin(this.ID) + `,`,
		`IDPrefix:` + valueToStringPlugin(this.IDPrefix) + `,`,
		`Name:` + valueToStringPlugin(this.Name) + `,`,
		`NamePrefix:` + valueToStringPlugin(this.NamePrefix) + `,`,
		`Custom:` + valueToStringPlugin(this.Custom) + `,`,
		`CustomPrefix:` + valueToStringPlugin(this.CustomPrefix) + `,`,
		`ServiceID:` + valueToStringPlugin(this.ServiceID) + `,`,
		`NodeID:` + valueToStringPlugin(this.NodeID) + `,`,
		`Slot:` + valueToStringPlugin(this.Slot) + `,`,
		`DesiredState:` + valueToStringPlugin(this.DesiredState) + `,`,
		`Role:` + valueToStringPlugin(this.Role) + `,`,
		`Membership:` + valueToStringPlugin(this.Membership) + `,`,
		`Kind:` + valueToStringPlugin(this.Kind) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *StoreObject) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StoreObject{`,
		`WatchSelectors:` + strings.Replace(fmt.Sprintf("%v", this.WatchSelectors), "WatchSelectors", "WatchSelectors", 1) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TLSAuthorization) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TLSAuthorization{`,
		`Roles:` + fmt.Sprintf("%v", this.Roles) + `,`,
		`Insecure:` + valueToStringPlugin(this.Insecure) + `,`,
		`XXX_unrecognized:` + fmt.Sprintf("%v", this.XXX_unrecognized) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringPlugin(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *WatchSelectors) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlugin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchSelectors: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchSelectors: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ID = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IDPrefix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IDPrefix = &b
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Name = &b
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NamePrefix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.NamePrefix = &b
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Custom", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Custom = &b
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomPrefix", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.CustomPrefix = &b
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceID", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ServiceID = &b
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeID", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.NodeID = &b
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Slot = &b
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DesiredState", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.DesiredState = &b
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Role = &b
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Membership", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Membership = &b
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Kind = &b
		default:
			iNdEx = preIndex
			skippy, err := skipPlugin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlugin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoreObject) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlugin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WatchSelectors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPlugin
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WatchSelectors == nil {
				m.WatchSelectors = &WatchSelectors{}
			}
			if err := m.WatchSelectors.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipPlugin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlugin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("watch_selectors")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLSAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPlugin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TLSAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TLSAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPlugin
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Insecure", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Insecure = &b
		default:
			iNdEx = preIndex
			skippy, err := skipPlugin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPlugin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPlugin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPlugin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPlugin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthPlugin
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowPlugin
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipPlugin(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthPlugin = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPlugin   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("plugin.proto", fileDescriptorPlugin) }

var fileDescriptorPlugin = []byte{
	// 569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0xd3, 0x36, 0x4d, 0xc6, 0x69, 0xff, 0xfe, 0x2b, 0x54, 0xad, 0x7a, 0x70, 0xaa, 0x46,
	0x42, 0x41, 0x42, 0xa9, 0xd4, 0x63, 0x6e, 0x94, 0x5c, 0x22, 0x01, 0x45, 0x0e, 0x12, 0x37, 0x2c,
	0xd7, 0x3b, 0x4d, 0x96, 0x3a, 0x5e, 0x6b, 0x77, 0x4d, 0x0b, 0x27, 0x5e, 0x80, 0x07, 0xe0, 0xca,
	0xd3, 0xf4, 0xc8, 0x91, 0x53, 0x44, 0x2d, 0x71, 0xe0, 0x06, 0x3c, 0x01, 0xda, 0x5d, 0xa7, 0x69,
	0x50, 0xab, 0x9e, 0x3c, 0xf3, 0xcd, 0x7c, 0xdf, 0xcc, 0xce, 0x67, 0x68, 0xe5, 0x69, 0x31, 0xe6,
	0x59, 0x2f, 0x97, 0x42, 0x0b, 0xb2, 0xc3, 0x44, 0x72, 0x86, 0xd2, 0x65, 0x27, 0xc5, 0x69, 0xcf,
	0x55, 0x77, 0xf7, 0xc6, 0x42, 0x8c, 0x53, 0x3c, 0x98, 0xe3, 0x07, 0x0c, 0x55, 0x22, 0x79, 0xae,
	0x45, 0xd5, 0xbb, 0xff, 0x79, 0x15, 0xb6, 0x5e, 0xc7, 0x3a, 0x99, 0x8c, 0x30, 0xc5, 0x44, 0x0b,
	0xa9, 0xc8, 0x0e, 0xd4, 0x38, 0xa3, 0xde, 0x9e, 0xd7, 0x6d, 0x1c, 0xd5, 0xcb, 0x59, 0xbb, 0x36,
	0x1c, 0x84, 0x35, 0xce, 0xc8, 0x23, 0x68, 0x72, 0x16, 0xe5, 0x12, 0x4f, 0xf9, 0x05, 0xad, 0xd9,
	0x72, 0xab, 0x9c, 0xb5, 0x1b, 0xc3, 0xc1, 0x4b, 0x8b, 0x85, 0x0d, 0xce, 0x5c, 0x44, 0x08, 0xac,
	0x65, 0xf1, 0x14, 0xe9, 0xaa, 0xe9, 0x0a, 0x6d, 0x4c, 0xda, 0xe0, 0x9b, 0xef, 0x5c, 0x60, 0xcd,
	0x96, 0xc0, 0x40, 0x15, 0x69, 0x07, 0xea, 0x49, 0xa1, 0xb4, 0x98, 0xd2, 0x75, 0x5b, 0xab, 0x32,
	0xd2, 0x81, 0x4d, 0x17, 0xcd, 0xa9, 0x75, 0x5b, 0x6e, 0x39, 0xb0, 0x22, 0x3f, 0x06, 0x50, 0x28,
	0xdf, 0xf1, 0x04, 0x23, 0xce, 0xe8, 0x86, 0xdd, 0x6e, 0xb3, 0x9c, 0xb5, 0x9b, 0x23, 0x87, 0x0e,
	0x07, 0x61, 0xb3, 0x6a, 0x18, 0x32, 0xd2, 0x81, 0x8d, 0x4c, 0x30, 0xdb, 0xda, 0xb0, 0xad, 0x50,
	0xce, 0xda, 0xf5, 0x17, 0x82, 0x99, 0xbe, 0xba, 0x29, 0x0d, 0x99, 0x79, 0x84, 0x4a, 0x85, 0xa6,
	0x4d, 0xf7, 0x08, 0x13, 0x9b, 0x5d, 0x18, 0x2a, 0x2e, 0x91, 0x45, 0x4a, 0xc7, 0x1a, 0x29, 0xb8,
	0x5d, 0x2a, 0x70, 0x64, 0x30, 0x43, 0x94, 0x22, 0x45, 0xea, 0x3b, 0xa2, 0x89, 0x49, 0x00, 0x30,
	0xc5, 0xe9, 0x09, 0x4a, 0x35, 0xe1, 0x39, 0x6d, 0xb9, 0xc7, 0x2f, 0x10, 0xc3, 0x39, 0xe3, 0x19,
	0xa3, 0x9b, 0x8e, 0x63, 0xe2, 0xfd, 0x37, 0xe0, 0x8f, 0xb4, 0x90, 0x78, 0x7c, 0xf2, 0x16, 0x13,
	0x4d, 0x8e, 0xe1, 0xbf, 0x73, 0xe3, 0x54, 0xa4, 0xe6, 0x56, 0x51, 0x6f, 0xaf, 0xd6, 0xf5, 0x0f,
	0x1f, 0xf6, 0x6e, 0xb7, 0xbf, 0xb7, 0x6c, 0x6c, 0xb8, 0x75, 0xbe, 0x94, 0xef, 0x0f, 0x60, 0xfb,
	0xd5, 0xb3, 0xd1, 0x93, 0x42, 0x4f, 0x84, 0xe4, 0x1f, 0x62, 0xcd, 0x45, 0x46, 0x1e, 0xc0, 0xba,
	0xd9, 0xd7, 0x48, 0xaf, 0x76, 0x9b, 0xa1, 0x4b, 0xc8, 0x2e, 0x34, 0x78, 0xa6, 0x30, 0x29, 0x24,
	0x3a, 0xe7, 0xc3, 0xeb, 0xbc, 0xff, 0x14, 0x1a, 0x0c, 0x31, 0x4f, 0x44, 0xfe, 0x9e, 0xb4, 0x7b,
	0xee, 0x87, 0x5b, 0x6c, 0xf2, 0x1c, 0x95, 0x8a, 0xc7, 0x78, 0x9c, 0x1b, 0x75, 0x45, 0x7f, 0x7d,
	0xb1, 0xbe, 0xf7, 0xd7, 0xb4, 0x2c, 0x30, 0xbc, 0x26, 0xf6, 0x87, 0xe0, 0xbb, 0x78, 0x9a, 0xc7,
	0x12, 0xef, 0xd7, 0xf9, 0xb3, 0xa4, 0x73, 0x93, 0xdb, 0xe7, 0xd0, 0x52, 0xe6, 0x6a, 0x91, 0x70,
	0x67, 0xbb, 0x57, 0xeb, 0xb7, 0xd5, 0xf2, 0x0f, 0x3b, 0x77, 0x9d, 0xf1, 0x86, 0x09, 0xa1, 0xaf,
	0x16, 0x49, 0xff, 0x02, 0xfe, 0xd7, 0xa9, 0x8a, 0xe2, 0xa5, 0x0b, 0x06, 0xb7, 0xcc, 0xd3, 0x13,
	0xc1, 0xe6, 0xe3, 0x7e, 0xfe, 0xf8, 0xd4, 0xb1, 0xf3, 0xba, 0x77, 0xcd, 0xfb, 0xd7, 0x94, 0x70,
	0x5b, 0xa7, 0x6a, 0x09, 0x39, 0xa2, 0x97, 0x57, 0xc1, 0xca, 0xb7, 0xab, 0x60, 0xe5, 0x63, 0x19,
	0x78, 0x97, 0x65, 0xe0, 0x7d, 0x2d, 0x03, 0xef, 0x7b, 0x19, 0x78, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xf7, 0x87, 0xae, 0xc8, 0x19, 0x04, 0x00, 0x00,
}
